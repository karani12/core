<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="io.opencui.du.MatchPriorityTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2022-10-22T14:39:43" hostname="sean-Alienware-x15-R1" time="0.589">
  <properties/>
  <testcase name="testMatchPriority" classname="io.opencui.du.MatchPriorityTest" time="0.589"/>
  <system-out><![CDATA[[io.framely.du.StateTrackerTest] nlu addr: 127.0.0.1:8501, duckling addr: http://127.0.0.1:8000/parse
processing org.a.any with l1	longer time
getting null for it
getting null for it has
getting null for it has been
getting null for it has been a
getting null for it has been a long
getting null for it has been a long time
getting null for has
getting null for has been
getting null for has been a
getting null for has been a long
getting null for has been a long time
getting null for been
getting null for been a
getting null for been a long
getting null for been a long time
getting null for a
getting null for a long
getting null for a long time
getting null for long
getting null for long time
getting null for time
[_partial_match @(19, 23)]
getting for org.a.any : 0
{}
frame event without expectation: [FrameEvent(type=Greeting, slots=[], frames=[], packageName=io.opencui.core)]
getting null for longer
getting 0 for longer time
getting null for time
[_partial_match @(0, 6), _partial_match @(7, 11)]
getting for org.a.any : 0
[_partial_match @(0, 6), _partial_match @(7, 11)]
getting for org.a.any : 0
{org.a.any=[l1 @(0, 11)]}
frame event with expectation {someIntent.slot1}: [FrameEvent(type=someIntent, slots=[EntityEvent(value="l1", attribute=slot1)], frames=[], packageName=org.a)]
getting null for good
getting null for good day
getting null for day
{}
frame event with expectation {someIntent.slot1}: [FrameEvent(type=Greeting, slots=[], frames=[], packageName=io.opencui.core)]
getting null for good
getting null for good day
getting null for day
{}
frame event with expectation {someIntent.slot2}: [FrameEvent(type=someIntent, slots=[EntityEvent(value=good day, attribute=slot2)], frames=[], packageName=org.a)]
]]></system-out>
  <system-err><![CDATA[[Test worker] INFO io.opencui.core.Dispatcher - class io.opencui.du.DucklingRecognizer is configured twice, was http://127.0.0.1:8000/parse now http://127.0.0.1:8000/parse
[Test worker] INFO io.opencui.core.Dispatcher - class io.opencui.du.TfRestBertNLUModel is configured twice, was (127.0.0.1, 8501, http) now (127.0.0.1, 8501, http)
[Test worker] INFO io.opencui.du.ListRecognizer - Init ListRecognizer...
[Test worker] INFO io.opencui.du.ListRecognizer - process entity type org.a.any with 1 entries.
[Test worker] INFO io.opencui.du.DucklingRecognizer - org.a.any does not need DucklingRecognizer
[Test worker] INFO io.opencui.du.ExpressionSearcher - Dispatcher.memeoryBased = true
[Test worker] INFO io.opencui.du.ExpressionSearcher - [ExpressionSearch] build index for a
[Test worker] INFO io.opencui.du.ExpressionSearcher - context: default, expression: long time no see, long time no see
[Test worker] INFO io.opencui.du.ExpressionSearcher - context: default, expression: good day, good day
[Test worker] INFO io.opencui.du.BertStateTracker - Getting it has been a long time under DialogExpectations(expectations=[])
[Test worker] INFO io.opencui.du.DucklingRecognizer - []
[Test worker] INFO io.opencui.du.ExpressionSearcher - search with expression: it has been a long time
[Test worker] INFO io.opencui.du.ExpressionSearcher - got 1 raw results for expression:ha expression:been expression:long expression:time
[Test worker] INFO io.opencui.du.ExpressionSearcher - ScoredDocument(score=1.0, document=Document<stored,indexed,tokenized<probe:long time no see> stored,indexed,tokenized<expression:long time no see> stored,indexed,tokenized<utterance:long time no see> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<context:default> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<owner:io.opencui.core.Greeting> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<slots:>>)
[Test worker] INFO io.opencui.du.ExpressionSearcher - got 1 results for expression:ha expression:been expression:long expression:time
[Test worker] INFO io.opencui.du.BertStateTracker - IntentModelResult(probs=[0.0235611964, 0.976438761])
[Test worker] INFO io.opencui.du.BertStateTracker - slot model, utterance: it has been a long time, probes: [], frame: io.opencui.core.Greeting, slots: null, []
[Test worker @coroutine#2] INFO io.opencui.du.BertStateTracker - extractSlotValues: class logits: UnifiedModelResult(segments=[it, has, been, a, long, time], classLogits=[], startLogitss=[], endLogitss=[], segStarts=[0, 3, 7, 12, 14, 19], segEnds=[2, 6, 11, 13, 18, 23]).class_logits
[Test worker @coroutine#2] INFO io.opencui.du.BertStateTracker - res: []
[Test worker] INFO io.opencui.du.BertStateTracker - Getting longer time under DialogExpectations(expectations=[DialogExpectation(activeFrames=[ExpectedFrame(frame=org.a.someIntent, slot=slot1, slotType=null, allowDontCare=null)], status=OPEN)])
[Test worker] INFO io.opencui.du.DucklingRecognizer - []
[Test worker] INFO io.opencui.du.ExpressionSearcher - search with expression: longer time
[Test worker] INFO io.opencui.du.ExpressionSearcher - search with context: {"frame_id":"org.a.someIntent"}
[Test worker] INFO io.opencui.du.ExpressionSearcher - got 1 raw results for expression:longer expression:time
[Test worker] INFO io.opencui.du.ExpressionSearcher - ScoredDocument(score=1.0, document=Document<stored,indexed,tokenized<probe:long time no see> stored,indexed,tokenized<expression:long time no see> stored,indexed,tokenized<utterance:long time no see> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<context:default> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<owner:io.opencui.core.Greeting> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<slots:>>)
[Test worker] INFO io.opencui.du.ExpressionSearcher - got 1 results for expression:longer expression:time
[Test worker] INFO io.opencui.du.BertStateTracker - IntentModelResult(probs=[0.0112574194, 0.98874259])
[Test worker] INFO io.opencui.du.BertStateTracker - null enter convertWithExpection false and false
[Test worker] INFO io.opencui.du.BertStateTracker - slot model, utterance: longer time, probes: [some slot, some slot], frame: org.a.someIntent, slots: slot1, []
[Test worker @coroutine#4] INFO io.opencui.du.BertStateTracker - extractSlotValues: class logits: UnifiedModelResult(segments=[longer, time], classLogits=[0.999806702, 8.56100305E-5, 1.07742781E-4, 0.999806702, 8.56100305E-5, 1.07742781E-4], startLogitss=[[0.763808906, 0.236191079], [0.763808906, 0.236191079]], endLogitss=[[0.0575468428, 0.942453206], [0.0575468428, 0.942453206]], segStarts=[0, 7], segEnds=[6, 11]).class_logits
[Test worker @coroutine#4] INFO io.opencui.du.BertStateTracker - handle longer time for DUSlotMeta(label=slot1, triggers=[some slot], type=org.a.any, isMultiValue=false, parent=null, isHead=false). with false
[Test worker @coroutine#4] INFO io.opencui.du.BertStateTracker - handle entity with Label = "l1"
[Test worker @coroutine#4] INFO io.opencui.du.BertStateTracker - got matched: longer time from long time no see with EntityEvent(value="l1", attribute=slot1)
[Test worker @coroutine#4] INFO io.opencui.du.BertStateTracker - span is: ScoredSpan(start=0, end=11, score=3.6, value=longer time, norm="l1", type=org.a.any, attribute=slot1, traceInfo={prefix_suffix_bonus=0.0, recognizer_score=2.0}, recongizedEntity=true, recongizedSlot=false). putting EntityEvent(value="l1", attribute=slot1) with org.a.any
[Test worker @coroutine#4] INFO io.opencui.du.BertStateTracker - res: [FrameEvent(type=someIntent, slots=[EntityEvent(value="l1", attribute=slot1)], frames=[], packageName=org.a)]
[Test worker] INFO io.opencui.du.BertStateTracker - Getting good day under DialogExpectations(expectations=[DialogExpectation(activeFrames=[ExpectedFrame(frame=org.a.someIntent, slot=slot1, slotType=null, allowDontCare=null)], status=OPEN)])
[Test worker] INFO io.opencui.du.DucklingRecognizer - []
[Test worker] INFO io.opencui.du.ExpressionSearcher - search with expression: good day
[Test worker] INFO io.opencui.du.ExpressionSearcher - search with context: {"frame_id":"org.a.someIntent"}
[Test worker] INFO io.opencui.du.ExpressionSearcher - got 1 raw results for expression:good expression:dai
[Test worker] INFO io.opencui.du.ExpressionSearcher - ScoredDocument(score=1.0, document=Document<stored,indexed,tokenized<probe:good day> stored,indexed,tokenized<expression:good day> stored,indexed,tokenized<utterance:good day> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<context:default> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<owner:io.opencui.core.Greeting> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<slots:>>)
[Test worker] INFO io.opencui.du.ExpressionSearcher - got 1 results for expression:good expression:dai
[Test worker] INFO io.opencui.du.BertStateTracker - IntentModelResult(probs=[2.18137211E-4, 0.999781907])
[Test worker] INFO io.opencui.du.BertStateTracker - null enter convertWithExpection false and false
[Test worker] INFO io.opencui.du.BertStateTracker - slot model, utterance: good day, probes: [some slot, some slot], frame: org.a.someIntent, slots: slot1, []
[Test worker @coroutine#6] INFO io.opencui.du.BertStateTracker - extractSlotValues: class logits: UnifiedModelResult(segments=[good, day], classLogits=[0.999956489, 2.93820685E-5, 1.42369281E-5, 0.999956489, 2.93820685E-5, 1.42369281E-5], startLogitss=[[0.220521972, 0.779478], [0.220521972, 0.779478]], endLogitss=[[0.111644685, 0.888355315], [0.111644685, 0.888355315]], segStarts=[0, 5], segEnds=[4, 8]).class_logits
[Test worker @coroutine#6] INFO io.opencui.du.BertStateTracker - res: []
[Test worker] INFO io.opencui.du.BertStateTracker - slot model, utterance: good day, probes: [some slot, some slot], frame: org.a.someIntent, slots: slot1, []
[Test worker @coroutine#8] INFO io.opencui.du.BertStateTracker - extractSlotValues: class logits: UnifiedModelResult(segments=[good, day], classLogits=[0.999956489, 2.93820685E-5, 1.42369281E-5, 0.999956489, 2.93820685E-5, 1.42369281E-5], startLogitss=[[0.220521972, 0.779478], [0.220521972, 0.779478]], endLogitss=[[0.111644685, 0.888355315], [0.111644685, 0.888355315]], segStarts=[0, 5], segEnds=[4, 8]).class_logits
[Test worker @coroutine#8] INFO io.opencui.du.BertStateTracker - res: []
[Test worker] INFO io.opencui.du.BertStateTracker - for ExpectedFrame(frame=org.a.someIntent, slot=slot1, slotType=null, allowDontCare=null) getting event: []
[Test worker] INFO io.opencui.du.BertStateTracker - slot model, utterance: good day, probes: [], frame: io.opencui.core.Greeting, slots: null, []
[Test worker @coroutine#10] INFO io.opencui.du.BertStateTracker - extractSlotValues: class logits: UnifiedModelResult(segments=[good, day], classLogits=[], startLogitss=[], endLogitss=[], segStarts=[0, 5], segEnds=[4, 8]).class_logits
[Test worker @coroutine#10] INFO io.opencui.du.BertStateTracker - res: []
[Test worker] INFO io.opencui.du.BertStateTracker - Getting good day under DialogExpectations(expectations=[DialogExpectation(activeFrames=[ExpectedFrame(frame=org.a.someIntent, slot=slot2, slotType=null, allowDontCare=null)], status=OPEN)])
[Test worker] INFO io.opencui.du.DucklingRecognizer - []
[Test worker] INFO io.opencui.du.ExpressionSearcher - search with expression: good day
[Test worker] INFO io.opencui.du.ExpressionSearcher - search with context: {"frame_id":"org.a.someIntent"}
[Test worker] INFO io.opencui.du.ExpressionSearcher - got 1 raw results for expression:good expression:dai
[Test worker] INFO io.opencui.du.ExpressionSearcher - ScoredDocument(score=1.0, document=Document<stored,indexed,tokenized<probe:good day> stored,indexed,tokenized<expression:good day> stored,indexed,tokenized<utterance:good day> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<context:default> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<owner:io.opencui.core.Greeting> stored,indexed,tokenized,omitNorms,indexOptions=DOCS<slots:>>)
[Test worker] INFO io.opencui.du.ExpressionSearcher - got 1 results for expression:good expression:dai
[Test worker] INFO io.opencui.du.BertStateTracker - IntentModelResult(probs=[2.18137211E-4, 0.999781907])
[Test worker] INFO io.opencui.du.BertStateTracker - null enter convertWithExpection false and false
[Test worker] INFO io.opencui.du.BertStateTracker - slot model, utterance: good day, probes: [some slot, some slot], frame: org.a.someIntent, slots: slot2, []
[Test worker @coroutine#12] INFO io.opencui.du.BertStateTracker - extractSlotValues: class logits: UnifiedModelResult(segments=[good, day], classLogits=[0.999956489, 2.93820685E-5, 1.42369281E-5, 0.999956489, 2.93820685E-5, 1.42369281E-5], startLogitss=[[0.220521972, 0.779478], [0.220521972, 0.779478]], endLogitss=[[0.111644685, 0.888355315], [0.111644685, 0.888355315]], segStarts=[0, 5], segEnds=[4, 8]).class_logits
[Test worker @coroutine#12] INFO io.opencui.du.BertStateTracker - res: []
[Test worker] INFO io.opencui.du.BertStateTracker - slot model, utterance: good day, probes: [some slot, some slot], frame: org.a.someIntent, slots: slot2, []
[Test worker @coroutine#14] INFO io.opencui.du.BertStateTracker - extractSlotValues: class logits: UnifiedModelResult(segments=[good, day], classLogits=[0.999956489, 2.93820685E-5, 1.42369281E-5, 0.999956489, 2.93820685E-5, 1.42369281E-5], startLogitss=[[0.220521972, 0.779478], [0.220521972, 0.779478]], endLogitss=[[0.111644685, 0.888355315], [0.111644685, 0.888355315]], segStarts=[0, 5], segEnds=[4, 8]).class_logits
[Test worker @coroutine#14] INFO io.opencui.du.BertStateTracker - res: []
[Test worker] INFO io.opencui.du.BertStateTracker - for ExpectedFrame(frame=org.a.someIntent, slot=slot2, slotType=null, allowDontCare=null) getting event: []
]]></system-err>
</testsuite>
